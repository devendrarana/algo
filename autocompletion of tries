#include <iostream>
using namespace std;
string dic[30001];
int idx;
class trienode{
    public:
    int index;
    trienode** children;
    trienode(){
        index=-1;
        children=new trienode*[26];
        for(int i=0;i<26;i++)
        children[i]=NULL;
    }
};
void insert(string s,trienode* head)
{
    
    trienode *current=head;
    for(int i=0;i<s.length();i++){
        int val=s[i]-'a';
    if(current->children[val]==NULL)
    {
        current->children[val]=new trienode();
    }
    current=current->children[val];
    }
    
    dic[idx]=s;
    current->index=idx++;
       
    
}
void query1(trienode *head)
{
    if(head==NULL)
    return ;
   trienode *current=head;
   
       if(current->index>-1)
       std::cout << dic[current->index] << std::endl;
        for(int i=0;i<26;i++)
    {
       
           if(current->children[i]!=NULL)
            query1(current->children[i]);
       
    }
    
    
}
void query(string s,trienode *head)
{
    trienode *current=head;
    for(int i=0;i<s.length();i++)
    {
        int val=s[i]-'a';
        if(current->children[val]==NULL)
        {
            insert(s,head);
           cout << "No suggestions" << endl;
			return;
        }
        current=current->children[val];
    }
   
    query1(current);
    
}
int main() {
	int n;
	cin>>n;
	trienode* head=new trienode();

	while(n--){
	    string s;
	    cin>>s;
	    insert(s,head);
	    }
	  int q;  
	  cin>>q;
	  string s1;
	  while(q--){
	      cin>>s1;
	   query(s1,head);
	  }
	return 0;
}
